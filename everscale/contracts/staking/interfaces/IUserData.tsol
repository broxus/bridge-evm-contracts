pragma ever-solidity >= 0.62.0;
pragma AbiHeader expire;

import "./IStakingPool.tsol";

interface IUserData {
    struct RewardRoundData {
        uint128 reward_balance;
        uint128 reward_debt;
    }

    struct UserDataDetails {
        uint128 token_balance;
        uint32 current_version;
        RewardRoundData[] rewardRounds;
        address root;
        address user;
    }

    event UserDataCodeUpgraded(uint32 code_version);
    event DepositProcessed(uint128 tokens_deposited, uint128 new_balance);

    function getDetails() external responsible view returns (UserDataDetails);
    function processDeposit(
        uint64 nonce,
        uint128 _tokens_to_deposit,
        IStakingPool.RewardRound[] reward_rounds,
        uint32 code_version
    ) external;
    function withdrawTons() external;
    function processWithdraw(
        uint128 _tokens_to_withdraw,
        IStakingPool.RewardRound[] reward_rounds,
        address send_gas_to,
        uint32 code_version
    ) external;
    function processClaimReward(IStakingPool.RewardRound[] reward_rounds, address send_gas_to, uint32 code_version) external;
}
